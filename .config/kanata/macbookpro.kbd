(defcfg
  process-unmapped-keys yes
  log-layer-changes no
  danger-enable-cmd yes
  concurrent-tap-hold yes

  ;; When any non-chord activation happens, this timeout begins. Until this timeout expires
  ;; all inputs will immediately skip chords processing and be processed by the active layer.
  chords-v2-min-idle 200
)

;; Key Mappings https://raw.githubusercontent.com/jtroo/kanata/refs/heads/main/parser/src/keys/mod.rs

;; Variables
(defvar
 tap-time 245
 hold-time 250
 tap-time-long 300
 hold-time-long 315
 chord-time 80
 subl-time 200
)

;; defsrc for the MacBook Pro
(defsrc
  esc    f1     f2     f3     f4     f5     f6     f7     f8     f9     f10    f11    f12
  grv    1      2      3      4      5      6      7      8      9      0      -      =      bspc
  tab    q      w      e      r      t      y      u      i      o      p      [      ]      \
  caps   a      s      d      f      g      h      j      k      l      ;      '      ret
  lsft   z      x      c      v      b      n      m      ,      .      /      ‚ñ≤      rsft
  fn     lctl   lalt   lmet                spc            rmet   ralt   ‚óÄ      ‚ñº      ‚ñ∂
)

;; All Aliases
(defalias
  hypern S-C-A-M-n ;; Tot app
  hyperl S-C-A-M-l ;; Bitwarden

  ;; Homerow Modifiers
  mlmet (tap-hold $tap-time $hold-time d lmet)
  mrmet (tap-hold $tap-time $hold-time k rmet)
  mlalt (tap-hold $tap-time $hold-time f lalt)
  mralt (tap-hold $tap-time $hold-time j ralt)
  mlctl (tap-hold $tap-time $hold-time a lctl)
  mrctl (tap-hold $tap-time $hold-time ; rctl)

  ;; Right Option: tap = (change lang) F18, hold = func layer
  lngfn (tap-hold-press $tap-time $hold-time f18 (layer-while-held func))

  ;; Left Command: tap = backspace, hold = nav layer
  bknav (tap-hold $tap-time $hold-time bspc (layer-while-held navi))

  ;; Right Command: tap = return, hold = nav layer
  rtnav (tap-hold $tap-time $hold-time ret (layer-while-held navi))

  ;; Hyper: tap = space, hold = hyper
  mhypr (tap-hold $tap-time $hold-time spc (multi lsft lctl lalt lmet))

  ;; Other layers tap-hold
  mlsys (tap-hold $tap-time $hold-time s (layer-while-held syst))
  mrsys (tap-hold $tap-time $hold-time l (layer-while-held syst))
  mfunc (tap-hold-press $tap-time $hold-time fn (layer-while-held func))
)

;; Main layer
(deflayer main
  _      f1     f2     f3     f4     f5     f6     f7     f8     f9     f10    f11    f12
  grv    1      2      3      4      5      6      7      8      9      0      -      =      bspc
  tab    q      w      e      r      t      y      u      i      o      p      [      ]      \
  esc   @mlctl @mlsys @mlmet @mlalt g      h      @mralt @mrmet @mrsys @mrctl '      _
  _      z      x      c      v      b      n      m      ,      .      /      ‚ñ≤      _
  lctl   @mfunc _      @bknav         @mhypr              @rtnav @lngfn ‚óÄ      ‚ñº      ‚ñ∂
)

(deflayer navi
  _      _      _      _      _      _      _      _      _      _      _      _      _
  _      7      8      9      _      _      _      _      _      _      _      _      _      _
  _      4      5      6      _      t      y      pgup   ‚ñ≤      pgdn   _      _      _      _
  _      1      2      3      _      g      home   ‚óÄ      ‚ñº      ‚ñ∂      end    _      _
  _      z      0      c      v      b      n      m      ,      .      /      ‚ñ≤      _
  _      lrld   _      _              @mhypr              _      _      ‚óÄ      ‚ñº      ‚ñ∂
)

(deflayer syst
  _      _      _      _      _      _      _      _      _      _      _      _      _
  _      _      _      _      _      _      _      _      _      _      _      _      _      _
  _      S-;    S-,    S-.    S-'    .      S-7    S--    [      ]      S-5    ,      S--    _
  _      S-1    -      S-=    =      S-3    S-\    S-2    S-9    S-0    ;      '      ret
  _      S-`    /      S-8    \      `      S-6    S-4    S-[    S-]    S-/    ‚ñ≤      _
  _      _      _      _              @mhypr              _      _      ‚óÄ      ‚ñº      ‚ñ∂
)

(deflayer func
  _      üîÖ     üîÜ     mctl   sls    dtn    dnd     ‚óÄ‚óÄ     ‚ñ∂‚è∏     ‚ñ∂‚ñ∂     üîá     üîâ      üîä
  _      _      _      _      _      _      _      _      _      _      _      _      _      del
  _      _      _      _      _      _      _      _      _      _      _      _      _      _
  _      _      _      _      _      _      _      _      _      _      _      _      _
  _      _      _      _      _      _      _      _      _      _      _      ‚ñ≤      _
  lctl   fn     _      del            @mhypr              _      _      home   ‚ñº      end
)